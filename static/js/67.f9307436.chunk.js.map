{"version":3,"file":"static/js/67.f9307436.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Pages/Contacts/Contacts.styled.jsx","components/Pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.section`\n  padding-top: 20px;\n  text-align: center;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport { TextField, Button } from '@mui/material';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Field = styled(TextField)`\n  font-size: 16px;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  margin-top: 10px;\n  color: #94d1c4;\n  &:hover {\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { contactsSelectors, contactsOperations } from '../redux/contact';\nimport { Form, Field, Btn } from './ContactForm.styled';\nimport { PatternFormat } from 'react-number-format';\nimport { TextField } from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const materialUITextFieldProps = {\n    label: 'Phone number',\n    placeholder: '+38 (000) 000 00 00',\n    variant: 'standard',\n    type: 'tel',\n    name: 'number',\n    maxRows: 4,\n  };\n\n  const handleChange = event => {\n    const { name } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts?.length > 0) {\n      if (contacts.some(item => item.name === name)) {\n        return Notify.warning(`${name} is already in contacts`, {\n          timeout: 1500,\n        });\n      }\n      if (contacts.some(item => item.number === number)) {\n        return Notify.warning(`${number} is already in contacts`, {\n          timeout: 1500,\n        });\n      }\n    }\n    dispatch(contactsOperations.createNewContact({ name, number }));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field\n        label=\"Name\"\n        placeholder=\"Tony Stark\"\n        variant=\"standard\"\n        required\n        type=\"text\"\n        name=\"name\"\n        id={nameInputId}\n        value={name}\n        onChange={handleChange}\n      />\n\n      <PatternFormat\n        value={number}\n        id={numberInputId}\n        format=\"+38 (###) ### ## ##\"\n        customInput={TextField}\n        onChange={handleChange}\n        required\n        {...materialUITextFieldProps}\n      />\n\n      <Btn variant=\"contained\" size=\"small\" color=\"secondary\" type=\"submit\">\n        Add new Contact\n      </Btn>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nexport const Input = styled.input`\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #ebebeb;\n  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);\n  margin-bottom: 20px;\n  :focus,\n  :hover {\n    outline: none;\n    border: 1px solid #4cbafc;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-right: 15px;\n  text-align: start;\n  font-size: 14px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport const Field = styled(TextField)`\n  font-size: 16px;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { Field } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterSelector } from '../redux/filter';\nimport { changeFilter } from '../redux/filter/filter-slice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterSelector);\n\n  const handleChange = e => {\n    dispatch(changeFilter(e));\n  };\n\n  return (\n    <>\n      <Field\n        label=\"Find contacts by name\"\n        placeholder=\"Steve Rogers\"\n        variant=\"standard\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => handleChange(event.target.value)}\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\nexport const ItemBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 10px 0;\n  border-bottom: 1px solid #071e22;\n  // padding: 8px ;\n  // align-items: center;\n  // font-size: 18px;\n  // :not(:last-child) {\n  //   margin-bottom: 10px;\n  // }\n  @media screen and (min-width: 768px) {\n    padding: 8px 0;\n    align-items: center;\n    font-size: 18px;\n    :not(:last-child) {\n      // margin-bottom: 10px;\n    }\n`;\n\nexport const Name = styled.span`\n  color: #071e22;\n  font-weight: 500;\n  font-size: 18px;\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n  }\n`;\nexport const Number = styled.a`\n  color: #071e22;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const Btn = styled(Button)`\n  color: #94d1c4;\n  padding: 3px 10px;\n  @media screen and (min-width: 768px) {\n    padding: 5px 15px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from '../redux/contact';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Loader from '../Loader/Loader';\n\nimport { Item, Name, Number, Btn, ItemBox } from './ContactListItem.styled';\n\nfunction ContactListItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const isLoading = false;\n\n  const handelDeleteContact = id => {\n    setIsDeleting(true);\n    dispatch(contactsOperations.deleteContact(id)).finally(() => {\n      setIsDeleting(false);\n    });\n  };\n\n  return (\n    <Item>\n      <ItemBox>\n        <Name>{name}:</Name>\n        <Number href=\"tel:+380961111111\">{number}</Number>\n      </ItemBox>\n\n      {!isDeleting ? (\n        <Btn\n          type=\"button\"\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"secondary\"\n          disabled={isLoading}\n          onClick={() => {\n            handelDeleteContact(id);\n            Notify.success(`Contact ${name} deleted!`, {\n              timeout: 1500,\n            });\n          }}\n        >\n          Delete\n        </Btn>\n      ) : (\n        <Loader isLoading={isDeleting} spinner={true} />\n      )}\n    </Item>\n  );\n}\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0 auto;\n  list-style: none;\n`;\n\nexport const Message = styled.span`\n  display: block;\n  margin-top: 20px;\n  text-align: center;\n  font-size: 18px;\n`;\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport { List, Message } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../redux/contact';\nimport { filterSelector } from '../redux/filter';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors);\n  const filter = useSelector(filterSelector);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getUserContacts());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  return (\n    <List>\n      {contacts && contacts.length > 0 ? (\n        (filter\n          ? contacts.filter(contact =>\n              contact.name.toLowerCase().includes(filter.toLowerCase())\n            )\n          : contacts\n        ).map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))\n      ) : (\n        <Message>Your phonebook is empty. Please add contact.</Message>\n      )}\n    </List>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 20px 20px;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  height: 20px;\n  border-radius: 5px;\n  padding: 2px 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 20px;\n  height: 30px;\n  margin-left: 10px;\n  border-radius: 5px;\n  background-color: #fff;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #ff0000;\n    color: #fff;\n  }\n`;\nexport const ContactsPageBox = styled.div`\n  display: flex;\n  @media screen and (max-width: 1023px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ContactsFormBox = styled.div`\n  padding: 0 30px;\n  @media screen and (min-width: 488px) {\n    width: 70%;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 768px) {\n    width: 50%;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 1024px) {\n    width: 30%;\n    margin: 0 0 0 40px;\n  }\n`;\nexport const ContactsListBox = styled.div`\n  padding: 0 30px;\n  @media screen and (min-width: 488px) {\n    width: 70%;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 768px) {\n    width: 80%;\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 1024px) {\n    width: 100%;\n  }\n`;\n","import Section from '../../Section/Section';\nimport ContactForm from '../../ContactForm/ContactForm';\nimport Filter from '../../Filter/Filter';\nimport ContactList from '../../ContactList/ContactList';\nimport {\n  ContactsPageBox,\n  ContactsFormBox,\n  ContactsListBox,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  return (\n    <ContactsPageBox>\n      <ContactsFormBox>\n        <Section title=\"Create new contact\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n        </Section>\n      </ContactsFormBox>\n      <ContactsListBox>\n        <Section title=\"Contact List\">\n          <ContactList />\n        </Section>\n      </ContactsListBox>\n    </ContactsPageBox>\n  );\n}\n"],"names":["Container","styled","Title","title","children","Form","Field","TextField","Btn","Button","ContactForm","dispatch","useDispatch","contacts","useSelector","contactsSelectors","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","length","some","item","Notify","timeout","contactsOperations","label","placeholder","variant","required","type","id","onChange","format","customInput","maxRows","size","color","filter","filterSelector","e","target","changeFilter","ItemBox","Item","Name","Number","isDeleting","setIsDeleting","href","Loader","isLoading","spinner","disabled","onClick","finally","handelDeleteContact","List","Message","useEffect","console","log","contact","toLowerCase","includes","map","ContactsPageBox","ContactsFormBox","ContactsListBox","Contacts"],"sourceRoot":""}